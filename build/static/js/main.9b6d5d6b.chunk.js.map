{"version":3,"sources":["Components/Header.jsx","Components/Home.jsx","Components/Api.jsx","App.js","index.js"],"names":["Header","Navbar","bg","variant","Brand","href","Nav","className","Link","Home","useState","userInput","setuserInput","text","color","disabledBtn","validJson","setvalidJson","show","msg","modalOpts","setmodalOpts","btnLoading","setbtnLoading","useEffect","JSON","parse","err","Container","Row","Col","Card","Body","Title","Form","Group","controlId","Control","as","rows","style","resize","spellCheck","value","onChange","e","target","Button","type","disabled","onClick","preventDefault","json","axios","post","then","res","data","id","localStorage","setItem","catch","Spinner","animation","size","role","aria-hidden","Modal","onHide","closeButton","Footer","Api","endpointID","setendpointID","endpoint","window","location","output","setOutput","getItem","xs","sm","Label","column","paddingLeft","paddingRight","InputGroup","minWidth","Append","Text","test","length","get","resp","stringify","response","request","readOnly","App","path","exact","strict","from","to","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9b6d5d6b.chunk.js","sourcesContent":["import React from 'react'\r\nimport Navbar from \"react-bootstrap/Navbar\"\r\nimport Nav from \"react-bootstrap/Nav\"\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"home\">Fake API</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"home\">Home</Nav.Link>\r\n                    <Nav.Link href=\"api\">API</Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState, useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport axios from 'axios';\r\n\r\nconst Home = () => {\r\n  const [userInput, setuserInput] = useState('');\r\n  const [validJson, setvalidJson] = useState({\r\n    text: '',\r\n    color: '',\r\n    disabledBtn: true,\r\n  });\r\n  const [modalOpts, setmodalOpts] = useState({ show: false, msg: '' });\r\n  const [btnLoading, setbtnLoading] = useState(false);\r\n  const postJson = (e) => {\r\n    e.preventDefault();\r\n    setbtnLoading(true);\r\n    let json = JSON.parse(userInput);\r\n    axios\r\n      .post('/api', json)\r\n      .then((res) => {\r\n        const { msg, id } = res.data;\r\n        setmodalOpts({ show: true, msg });\r\n        localStorage.setItem('id', id);\r\n      })\r\n      .catch(() =>\r\n        setmodalOpts({\r\n          show: true,\r\n          msg:\r\n            'There was an error processing your request, please try again later',\r\n        })\r\n      )\r\n      .then(() => setbtnLoading(false));\r\n  };\r\n  useEffect(() => {\r\n    if (userInput) {\r\n      try {\r\n        JSON.parse(userInput);\r\n        setvalidJson({\r\n          text: 'Valid JSON Format',\r\n          color: 'success',\r\n          disabledBtn: false,\r\n        });\r\n      } catch (err) {\r\n        setvalidJson({\r\n          text: 'Invalid JSON Format',\r\n          color: 'danger',\r\n          disabledBtn: true,\r\n        });\r\n      }\r\n    }\r\n  }, [userInput]);\r\n  return (\r\n    <Container>\r\n      <Row className='mt-5'>\r\n        <Col>\r\n          <Card className='text-center'>\r\n            <Card.Header>Post Your JSON</Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>\r\n                Enter a JSON text and we will generate an endpoint to GET it\r\n              </Card.Title>\r\n              <Form className='mt-4'>\r\n                <Form.Group controlId='formBasicText'>\r\n                  <Form.Control\r\n                    as='textarea'\r\n                    rows={12}\r\n                    style={{ resize: 'none' }}\r\n                    spellCheck='false'\r\n                    value={userInput}\r\n                    onChange={(e) => setuserInput(e.target.value)}\r\n                  />\r\n                </Form.Group>\r\n                <Container>\r\n                  <Row>\r\n                    <Col>\r\n                      <p className={`text-left text-${validJson.color}`}>\r\n                        {validJson.text}\r\n                      </p>\r\n                    </Col>\r\n                    <Col className='text-right'>\r\n                      <Button\r\n                        variant='primary'\r\n                        type='submit'\r\n                        disabled={validJson.disabledBtn}\r\n                        onClick={postJson}\r\n                      >\r\n                        {btnLoading ? (\r\n                          <Spinner\r\n                            as='span'\r\n                            animation='border'\r\n                            size='sm'\r\n                            role='status'\r\n                            aria-hidden='true'\r\n                          />\r\n                        ) : (\r\n                          'Submit'\r\n                        )}\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n              </Form>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n      <Modal\r\n        show={modalOpts.show}\r\n        onHide={() => setmodalOpts({ show: false, msg: '' })}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Request Response</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{modalOpts.msg}</Modal.Body>\r\n        <Modal.Footer>\r\n          <Button\r\n            variant='secondary'\r\n            onClick={() => setmodalOpts({ show: false, msg: '' })}\r\n          >\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport axios from 'axios';\r\n\r\nconst Api = () => {\r\n  const [endpointID, setendpointID] = useState('');\r\n  const currentUrl = window.location.href;\r\n  const endpoint = currentUrl + `/${endpointID}`;\r\n  const [output, setOutput] = useState('');\r\n  const [btnLoading, setbtnLoading] = useState(false);\r\n  useEffect(() => {\r\n    let id = localStorage.getItem('id');\r\n    id && setendpointID(id);\r\n  }, []);\r\n\r\n  const getJson = (e) => {\r\n    e.preventDefault();\r\n    setbtnLoading(true);\r\n    axios\r\n      .get(endpoint)\r\n      .then((resp) => {\r\n        resp.data = JSON.stringify(resp.data, null, 2);\r\n        setOutput(resp.data);\r\n      })\r\n      .catch((err) => {\r\n        if (err.response) {\r\n          setOutput(err.response.data.msg);\r\n        } else if (err.request) {\r\n          setOutput('Server out of reach, please try again later');\r\n        }\r\n      })\r\n      .then(() => setbtnLoading(false));\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    const { value } = e.target;\r\n    const reg = /^\\d+$/;\r\n    if (reg.test(value) && value.length <= 4) setendpointID(value);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className='mt-5'>\r\n        <Col>\r\n          <Card className='text-center'>\r\n            <Card.Header>Use the API</Card.Header>\r\n            <Card.Body className='text-left'>\r\n              <Form>\r\n                <Form.Row>\r\n                  <Col xs={12} sm='auto'>\r\n                    <Form.Label\r\n                      column='lg'\r\n                      xs='auto'\r\n                      style={{ paddingLeft: 0, paddingRight: 0 }}\r\n                    >\r\n                      Endpoint:\r\n                    </Form.Label>\r\n                  </Col>\r\n                  <Col xs>\r\n                    <InputGroup size='lg' style={{ minWidth: '150px' }}>\r\n                      <InputGroup.Append>\r\n                        <InputGroup.Text id='basic-addon2'>\r\n                          /api/\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Append>\r\n                      <Form.Control\r\n                        type='text'\r\n                        value={endpointID}\r\n                        onChange={handleInput}\r\n                      />\r\n                    </InputGroup>\r\n                  </Col>\r\n                  <Col xs='auto'>\r\n                    <Button\r\n                      variant='success'\r\n                      size='lg'\r\n                      onClick={getJson}\r\n                      disabled={!endpointID}\r\n                    >\r\n                      {btnLoading ? (\r\n                        <Spinner\r\n                          as='span'\r\n                          animation='border'\r\n                          size='sm'\r\n                          role='status'\r\n                          aria-hidden='true'\r\n                        />\r\n                      ) : (\r\n                        'GET'\r\n                      )}\r\n                    </Button>\r\n                  </Col>\r\n                </Form.Row>\r\n                <Form.Row>\r\n                  <Form.Text className='text-muted ml-1 mt-2'>\r\n                    You can use our example endpoint /api/1\r\n                  </Form.Text>\r\n                </Form.Row>\r\n              </Form>\r\n              <h2 className='mt-2'>Response:</h2>\r\n              <Form.Control\r\n                as='textarea'\r\n                rows={12}\r\n                style={{ resize: 'none' }}\r\n                spellCheck='false'\r\n                readOnly={true}\r\n                value={output}\r\n              />\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Api;\r\n","import Header from './Components/Header';\r\nimport Home from './Components/Home';\r\nimport Api from './Components/Api';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className='App'>\r\n      <Header />\r\n      <Switch>\r\n        <Route path='/home' exact>\r\n          <Home />\r\n        </Route>\r\n        <Route path='/api' exact strict>\r\n          <Api />\r\n        </Route>\r\n        <Redirect from='/*' to='/home' />\r\n        <Redirect from='/home/*' to='/home' />\r\n        <Redirect from='/api/*' to='/api' />\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport { BrowserRouter } from \"react-router-dom\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}